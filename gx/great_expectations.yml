# Welcome to Great Expectations! Always know what to expect from your data.
#
# Here you can define datasources, batch kwargs generators, integrations and
# more. This file is intended to be committed to your repo. For help with
# configuration please:
#   - Read our docs: https://docs.greatexpectations.io/docs/guides/connecting_to_your_data/connect_to_data_overview/#2-configure-your-datasource
#   - Join our slack channel: http://greatexpectations.io/slack

# config_version refers to the syntactic version of this config file, and is used in maintaining backwards compatibility
# It is auto-generated and usually does not need to be changed.
config_version: 4.0

# This config file supports variable substitution which enables: 1) keeping
# secrets out of source control & 2) environment-based configuration changes
# such as staging vs prod.
#
# When GX encounters substitution syntax (like `my_key: ${my_value}` or
# `my_key: $my_value`) in the great_expectations.yml file, it will attempt
# to replace the value of `my_key` with the value from an environment
# variable `my_value` or a corresponding key read from this config file,
# which is defined through the `config_variables_file_path`.
# Environment variables take precedence over variables defined here.
#
# Substitution values defined here can be a simple (non-nested) value,
# nested value such as a dictionary, or an environment variable (i.e. ${ENV_VAR})
#
#
# https://docs.greatexpectations.io/docs/guides/setup/configuring_data_contexts/how_to_configure_credentials


config_variables_file_path: uncommitted/config_variables.yml

# The plugins_directory will be added to your python path for custom modules
# used to override and extend Great Expectations.
plugins_directory: plugins/

stores:
# Stores are configurable places to store things like Expectations, Validations
# Data Docs, and more. These are for advanced users only - most users can simply
# leave this section alone.
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: expectations/

  validation_results_store:
    class_name: ValidationResultsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/validations/

  checkpoint_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      suppress_store_backend_id: true
      base_directory: checkpoints/

  validation_definition_store:
    class_name: ValidationDefinitionStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: validation_definitions/

expectations_store_name: expectations_store
validation_results_store_name: validation_results_store
checkpoint_store_name: checkpoint_store

data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/docs/terms/data_docs
  local_site:
    class_name: SiteBuilder
    site_index_builder:
      class_name: DefaultSiteIndexBuilder
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: data_docs
fluent_datasources:
  data_check:
    type: pandas
    id: 2c394697-3ccd-4111-ac63-a5a77b83e5a3
    assets:
      raw_train:
        type: parquet
        id: 5abe4955-ef9e-4f7b-a3d2-5578c8d2becd
        batch_definitions:
          batch_raw_train:
            id: 277c94d4-4333-480a-bfc2-823d65dbe0ad
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\raw\train.parquet
      raw_val:
        type: parquet
        id: 16ab34b9-c7e7-49f0-ba8f-e0e5da952d7d
        batch_definitions:
          batch_raw_val:
            id: 33aec2e1-c15c-4b9b-932f-4139acbabf57
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\raw\validation.parquet
      raw_test:
        type: parquet
        id: 65858db8-9e54-4e47-9d82-e3a5fddb5e13
        batch_definitions:
          batch_raw_test:
            id: 0de2ee2f-9bdd-4dc8-9035-bd10bf2f43d3
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\raw\test.parquet
      clean_train:
        type: parquet
        id: 099fe80f-4a99-4861-ad59-2a6d26d17b56
        batch_definitions:
          batch_clean_train:
            id: 2ba2de7f-b1c6-49bd-b6f1-cb5823dbf44c
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\processed\clean_train.parquet
      clean_val:
        type: parquet
        id: 1e6a76ea-22da-49bc-97ef-17c178f56e52
        batch_definitions:
          batch_clean_val:
            id: 515af765-edba-4f9a-bfef-420c2fdf4af6
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\processed\clean_val.parquet
      clean_test:
        type: parquet
        id: cb7a41f0-237e-45f8-bb78-96a14a493922
        batch_definitions:
          batch_clean_test:
            id: d300ac64-89ad-41fd-8ec6-af7dff52aeeb
            partitioner:
        path: C:\Users\k2627\TAED2_Synopsis\data\processed\clean_test.parquet
analytics_enabled:
data_context_id: c6f02c50-e9f1-48e6-87a9-ae118a51fc59
